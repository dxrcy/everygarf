use chrono::{Datelike, NaiveDate, Weekday};

use crate::dates::date_to_string;

pub fn get_file_title(date: NaiveDate) -> String {
    // Does not work after 2020-10-04, as it changes to `.jpg`

    if date >= NaiveDate::from_ymd_opt(2020, 9, 6).unwrap() && date.weekday() == Weekday::Sun {
        // YYYY-MM-DD.jpeg
        return date_to_string(date, "-", true) + ".jpeg";
    }

    if DATES_WITH_ALT_FILE_TITLE.iter().any(|(year, month, day)| {
        date.year() == *year && date.month() == *month && date.day() == *day
    }) {
        // GaYYMMDD.gif
        return format!(
            "Ga{:02}{:02}{:02}.gif",
            date.year() % 100,
            date.month(),
            date.day()
        );
    }

    // YYYY-MM-DD.gif
    date_to_string(date, "-", true) + ".gif"
}

/// This had to be found with by checking each image url...
#[rustfmt::skip]
#[allow(clippy::zero_prefixed_literal)]
const DATES_WITH_ALT_FILE_TITLE: &[(i32, u32, u32)] = &[
    (1995, 03, 15), (2020, 09, 06), (2020, 09, 13), (2020, 09, 20),
    (2020, 09, 27), (2020, 10, 04), (2020, 10, 11), (2020, 10, 18),
    (2020, 10, 25), (2020, 11, 01), (2020, 11, 08), (2020, 11, 15),
    (2020, 11, 22), (2020, 11, 29), (2020, 12, 06), (2020, 12, 13),
    (2020, 12, 20), (2020, 12, 27), (2021, 01, 03), (2021, 01, 10),
    (2021, 01, 17), (2021, 01, 24), (2021, 01, 31), (2021, 02, 07),
    (2021, 02, 14), (2021, 02, 21), (2021, 02, 28), (2021, 03, 07),
    (2021, 03, 14), (2021, 03, 21), (2021, 03, 28), (2021, 04, 04),
    (2021, 04, 11), (2021, 04, 18), (2021, 04, 25), (2021, 05, 02),
    (2021, 05, 09), (2021, 05, 16), (2021, 05, 23), (2021, 05, 30),
    (2021, 06, 06), (2021, 06, 13), (2021, 06, 20), (2021, 06, 27),
    (2021, 07, 04), (2021, 07, 11), (2021, 07, 18), (2021, 07, 25),
    (2021, 08, 01), (2021, 08, 08), (2021, 08, 15), (2021, 08, 22),
    (2021, 08, 29), (2021, 09, 05), (2021, 09, 12), (2021, 09, 19),
    (2021, 09, 26), (2021, 10, 03), (2021, 10, 10), (2021, 10, 17),
    (2021, 10, 24), (2021, 10, 31), (2021, 11, 07), (2021, 11, 14),
    (2021, 11, 21), (2021, 11, 28), (2021, 12, 05), (2021, 12, 12),
    (2021, 12, 19), (2021, 12, 26), (2022, 01, 02), (2022, 01, 09),
    (2022, 01, 16), (2022, 01, 23), (2022, 01, 30), (2022, 02, 06),
    (2022, 02, 13), (2022, 02, 20), (2022, 02, 27), (2022, 03, 06),
    (2022, 03, 13), (2022, 03, 20), (2022, 03, 27), (2022, 04, 03),
    (2022, 04, 10), (2022, 04, 17), (2022, 04, 24), (2022, 05, 01),
    (2022, 05, 08), (2022, 05, 15), (2022, 05, 22), (2022, 05, 29),
    (2022, 06, 05), (2022, 06, 12), (2022, 06, 19), (2022, 09, 25),
    (2022, 11, 06), (2022, 11, 13), (2022, 11, 20), (2022, 11, 27),
    (2022, 12, 04), (2022, 12, 11), (2022, 12, 18), (2022, 12, 25),
    (2023, 01, 01), (2023, 01, 08), (2023, 01, 15), (2023, 01, 22),
    (2023, 01, 29), (2023, 02, 05), (2023, 02, 12), (2023, 02, 19),
    (2023, 02, 26), (2023, 03, 05), (2023, 03, 12), (2023, 03, 19),
    (2023, 03, 26), (2023, 04, 02), (2023, 04, 09), (2023, 04, 16),
    (2023, 04, 23), (2023, 04, 30), (2023, 05, 07), (2023, 05, 14),
    (2023, 05, 21), (2023, 05, 28), (2023, 06, 04), (2023, 06, 11),
    (2023, 06, 18), (2023, 06, 25), (2023, 07, 02), (2023, 07, 09),
    (2023, 07, 16), (2023, 07, 23), (2023, 07, 30), (2023, 08, 06),
    (2023, 08, 13), (2023, 08, 20), (2023, 08, 27), (2023, 09, 03),
    (2023, 09, 10), (2023, 09, 17), (2023, 09, 24), (2023, 10, 01),
    (2023, 10, 08), (2023, 10, 15), (2023, 10, 22), (2023, 10, 29),
    (2023, 11, 05), (2023, 11, 12), (2023, 11, 19), (2023, 11, 26),
    (2023, 12, 03), (2023, 12, 10), (2023, 12, 17), (2023, 12, 24),
    (2023, 12, 31), (2024, 01, 07), (2024, 01, 14), (2024, 01, 21),
    (2024, 01, 28), (2024, 02, 04), (2024, 02, 11), (2024, 02, 18),
    (2024, 02, 25), (2024, 03, 02), (2024, 03, 03), (2024, 03, 10),
    (2024, 03, 17), (2024, 03, 24), (2024, 03, 31), (2024, 04, 02),
    (2024, 04, 07), (2024, 04, 14), (2024, 04, 21), (2024, 04, 28),
    (2024, 05, 05), (2024, 05, 12), (2024, 05, 19), (2024, 05, 26),
    (2024, 06, 02),
];

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn get_fandom_file_title_works() {
        assert_eq!(
            get_file_title(NaiveDate::from_ymd_opt(1978, 6, 19).unwrap()),
            "1978-06-19"
        );
        assert_eq!(
            get_file_title(NaiveDate::from_ymd_opt(1995, 3, 14).unwrap()),
            "1995-03-14"
        );
        assert_eq!(
            get_file_title(NaiveDate::from_ymd_opt(1995, 3, 16).unwrap()),
            "1995-03-16"
        );
        assert_eq!(
            get_file_title(NaiveDate::from_ymd_opt(2005, 3, 16).unwrap()),
            "2005-03-16"
        );
        assert_eq!(
            get_file_title(NaiveDate::from_ymd_opt(2030, 3, 16).unwrap()),
            "2030-03-16"
        );
        assert_eq!(
            get_file_title(NaiveDate::from_ymd_opt(1995, 3, 15).unwrap()),
            "Ga950315"
        );
        assert_eq!(
            get_file_title(NaiveDate::from_ymd_opt(2024, 5, 12).unwrap()),
            "Ga240512"
        );
    }
}
